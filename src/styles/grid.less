.flex,
.row {
	display: -webkit-box;
	display: -webkit-flex;
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: inline-flex;
	display: -ms-flex;
	display: -ms-inline-flexbox;
	display: -ms-flexbox;	
	display: flex;
}
.row {
  flex-wrap: wrap;
}
.flex-vertical {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
.align-justify {
	-webkit-box-pack: justify;
	-webkit-justify-content: space-between;
	-ms-flex-pack: justify;
	-ms-justify-content: space-between;
	justify-content: space-between;
}
.align-center {
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	-ms-flex-pack: center;
	-ms-justify-content: center;
	justify-content: center;
}
.align-left {
	-webkit-box-pack: start;
	-webkit-justify-content: flex-start;
	-ms-flex-pack: start;
	-ms-justify-content: flex-start;
	justify-content: flex-start;
}
.align-right {
	-webkit-box-pack: end;
	-webkit-justify-content: flex-end;
	-ms-flex-pack: end;
	-ms-justify-content: flex-end;
	justify-content: flex-end;
}
.valign-center {
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	-ms-align-items: center;
	align-items: center;
}
.valign-start {
	-webkit-box-align: start;
	-webkit-align-items: flex-start;
	-ms-flex-align: start;
	-ms-align-items: flex-start;
	align-items: flex-start;
}
.valign-end {
	-webkit-box-align: end;
	-webkit-align-items: flex-end;
	-ms-flex-align: end;
	-ms-align-items: flex-end;
	align-items: flex-end;
}
.valign-baseline {
	-webkit-box-align: baseline;
	-webkit-align-items: baseline;
	-ms-flex-align: baseline;
	-ms-align-items: baseline;
	align-items: baseline;
}
.self-bottom {
	-webkit-align-self: flex-end;
	-ms-align-self: flex-end;
	align-self: flex-end;
}
.self-top {
	-webkit-align-self: flex-start;
	-ms-align-self: flex-start;
	align-self: flex-start;
}
.self-center {
	-webkit-align-self: center;
	-ms-align-self: center;
	align-self: center;
}
.flex-wrap {
	-webkit-flex-flow: row wrap;
	-ms-flex-flow: row wrap;
	flex-flow: row wrap;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}

//grid systems
#breakpoints() {
  lg: 1200px;
  md: 992px;
  sm: 770px;
  xs: 576px;
  us: 300px;
}
.row {
	margin-left: -@col_gutter;
	margin-right: -@col_gutter;
}
[class*="col-"] {
  width: 100%;
  padding-left: @col_gutter;
  padding-right: @col_gutter;
}


//cols
.cols(@list, @i: 1) when (@i <= @list) {
  @computed: (100 / 12 * @i);
  .col-@{i} {
    -ms-flex: ~"0 0 @{computed}%";
    flex: ~"0 0 @{computed}%";
    max-width: ~"@{computed}%";
  }
  .col-offset-@{i} {
    margin-left: ~"@{computed}%";
  }
  .cols(@list, @i + 1);
}

//responsive-cols
.cols-loop(@list, @breakpoint, @i: 1) when (@i <= @list) {
  @computed: (100 / @list * @i);
  .col-@{breakpoint}-@{i} {
    -ms-flex: ~"0 0 @{computed}%";
    flex: ~"0 0 @{computed}%";
    max-width: ~"@{computed}%";
  }
  .col-offset-@{breakpoint}-@{i} {
    margin-left: ~"@{computed}%";
  }
  .cols-loop(@list, @breakpoint, @i + 1);
}


//non-breakpointed 12 columns grid
.cols(12);


@media (max-width: (#breakpoints[xs])) {
  .cols-loop(4, us);
}
@media (min-width: (#breakpoints[xs])) {
  .cols-loop(8, xs);

  .container, .inner {
    max-width: #breakpoints[xs];
  }
}
@media (min-width: (#breakpoints[sm])) {
  .cols-loop(8, sm);

  .container, .inner {
    max-width: #breakpoints[sm] + @col_gutter * 2;
  }
}
@media (min-width: (#breakpoints[md])) {
  .cols-loop(12, md);

  .container, .inner {
    // max-width: #breakpoints[md];
    max-width: #breakpoints[md] + @col_gutter * 2;
  }
}
@media (min-width: (#breakpoints[lg])) {
  .cols-loop(12, lg);

  .container, .inner {
    max-width: #breakpoints[lg];
  }
}